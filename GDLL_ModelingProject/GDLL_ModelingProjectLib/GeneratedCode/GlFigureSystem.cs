//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class GlFigureSystem : GlFigure
{
	public override GlRectangle BOX
	{
		get

		{
			throw new System.NotImplementedException();
		}
		private set

		{
			throw new System.NotImplementedException();
		}
	}

	public override GlPointR2 Center
	{
		get

		{
			throw new System.NotImplementedException();
		}
		private set

		{
			throw new System.NotImplementedException();
		}
	}

	public override int CountOfPoints
	{
		get

		{
			throw new System.NotImplementedException();
		}
		private set

		{
			throw new System.NotImplementedException();
		}
	}

	public virtual int CountOfFigures
	{
		get

		{
			throw new System.NotImplementedException();
		}
		private set

		{
			throw new System.NotImplementedException();
		}
	}

	private IEnumerable<GlFigure> figuresAmount
	{
		get;
		set;
	}

	private GlPointR2 systemCenter;

	private int countOfPoints
	{
		get;
		set;
	}

	public event FigureAddStart OnFigureAddingStart;

	public event FigureAdd OnFigureAdding;

	public event FigureAdd OnFigureAdded;

	public virtual FigureDrawBorder FigureDrawBorder
	{
		get;
		set;
	}

	public virtual FigureDraw FigureDraw
	{
		get;
		set;
	}

	public virtual FigureAddStart FigureAddStart
	{
		get;
		set;
	}

	public virtual FigureAdd FigureAdd
	{
		get;
		set;
	}

	public override void moveTo(float x, float y)
	{
		throw new System.NotImplementedException();
	}

	public override void Rotate(float angle)
	{
		throw new System.NotImplementedException();
	}

	public override void Rotate(float SIN, float COS)
	{
		throw new System.NotImplementedException();
	}

	public override GlFigure getScaled(float scale)
	{
		throw new System.NotImplementedException();
	}

	public override IEnumerable<GlPointR2> getIntersection(GlLineR2 L)
	{
		throw new System.NotImplementedException();
	}

	public override IEnumerable<GlPointR2> getIntersection(GlCurve C)
	{
		throw new System.NotImplementedException();
	}

	public override IEnumerable<GlPointR2> getIntersection(GlPolygon POLY)
	{
		throw new System.NotImplementedException();
	}

	public override bool isPointBelongs(GlPointR2 P)
	{
		throw new System.NotImplementedException();
	}

	public override void Draw()
	{
		throw new System.NotImplementedException();
	}

	public override void DrawFill()
	{
		throw new System.NotImplementedException();
	}

	public override void Draw(GlTexture T)
	{
		throw new System.NotImplementedException();
	}

	public override void Draw(GlRectangle Border)
	{
		throw new System.NotImplementedException();
	}

	public override void DrawFill(GlRectangle Border)
	{
		throw new System.NotImplementedException();
	}

	private void ActivateDrawed()
	{
		throw new System.NotImplementedException();
	}

	private void ActivateDrawing()
	{
		throw new System.NotImplementedException();
	}

	private bool ActivateDrawStart()
	{
		throw new System.NotImplementedException();
	}

	private void DrawFigures(FigureDrawBorder DrawMethod, GlRectangle Border)
	{
		throw new System.NotImplementedException();
	}

	private void DrawFigure(FigureDraw DrawMethod)
	{
		throw new System.NotImplementedException();
	}

	public virtual bool Equals(object obj)
	{
		throw new System.NotImplementedException();
	}

	public virtual string ToString()
	{
		throw new System.NotImplementedException();
	}

	public virtual void AddFigure(GlFigure F)
	{
		throw new System.NotImplementedException();
	}

	public virtual GlPointR2 this[int i]
	{
		get
		{
			throw new System.NotImplementedException();
		}
		set
		{
			throw new System.NotImplementedException();
		}
	}

	public GlFigureSystem(IEnumerable<GlFigure> initFigures)
	{
	}

	public GlFigureSystem(GlFigureSystem copyFigureSystem)
	{
	}

}

