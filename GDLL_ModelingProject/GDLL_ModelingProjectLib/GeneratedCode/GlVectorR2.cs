//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class GlVectorR2
{
	private const float FAULT = 0.001f;

	protected float dx;

	protected float dy;

	public virtual int float
	{
		get;
		private set;
	}

	public virtual object deltaX
	{
		get

		{
			throw new System.NotImplementedException();
		}
		private set

		{
			throw new System.NotImplementedException();
		}
	}

	public virtual object deltaY
	{
		get

		{
			throw new System.NotImplementedException();
		}
		private set

		{
			throw new System.NotImplementedException();
		}
	}

	public GlVectorR2(float dx, float dy)
	{
	}

	public GlVectorR2(GlVectorR2 copyVector)
	{
	}

	public virtual GlVectorR2 getRotatedVector(float angle)
	{
		throw new System.NotImplementedException();
	}

	public virtual GlVectorR2 getRotatedVector(float SIN, float COS)
	{
		throw new System.NotImplementedException();
	}

	public virtual void getReversedVector()
	{
		throw new System.NotImplementedException();
	}

	public static GlVectorR2 *(GlVectorR2 V1, GlVectorR2 V2)
	{
		throw new System.NotImplementedException();
	}

	public static GlVectorR2 *(GlVectorR2 V1, float F)
	{
		throw new System.NotImplementedException();
	}

	public static GlVectorR2 ^(GlVectorR2 V1, GlVectorR2 V2)
	{
		throw new System.NotImplementedException();
	}

	public static GlVectorR2 +(GlVectorR2 V1, GlVectorR2 V2)
	{
		throw new System.NotImplementedException();
	}

	public static GlVectorR2 -(GlVectorR2 V1, GlVectorR2 V2)
	{
		throw new System.NotImplementedException();
	}

	public static bool isParallel(GlVectorR2 V1, GlVectorR2 V2)
	{
		throw new System.NotImplementedException();
	}

	public static bool isPerpendicular(GlVectorR2 V1, GlVectorR2 V2)
	{
		throw new System.NotImplementedException();
	}

	public virtual GlPointR2 fromPointToPoint(GlPointR2 P)
	{
		throw new System.NotImplementedException();
	}

	public virtual bool isNullVector()
	{
		throw new System.NotImplementedException();
	}

	public virtual bool Equals(object obj)
	{
		throw new System.NotImplementedException();
	}

	public static bool Equals(GlVectorR2 V1, GlVectorR2 V2)
	{
		throw new System.NotImplementedException();
	}

	public virtual string ToString()
	{
		throw new System.NotImplementedException();
	}

}

