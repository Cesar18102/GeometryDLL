//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public abstract class GlFigure
{
	public virtual GlRectangle BOX
	{
		get;
		private set;
	}

	public virtual GlPointR2 Center
	{
		get;
		private set;
	}

	public virtual int CountOfPoints
	{
		get;
		private set;
	}

	public event RotationStart OnRotateStart;

	public event Rotation OnRotating;

	public event Rotation OnRotated;

	public event MovingStart OnMoveStart;

	public event Moving OnMoving;

	public event Moving OnMoved;

	public event DrawingStart OnDrawStart;

	public event Drawing OnDrawing;

	public event Drawing OnDrawed;

	public virtual RotationStart RotationStart
	{
		get;
		set;
	}

	public virtual MovingStart MovingStart
	{
		get;
		set;
	}

	public virtual DrawingStart DrawingStart
	{
		get;
		set;
	}

	public virtual Rotation Rotation
	{
		get;
		set;
	}

	public virtual Moving Moving
	{
		get;
		set;
	}

	public virtual Drawing Drawing
	{
		get;
		set;
	}

	public virtual GlVectorR2 GlVectorR2
	{
		get;
		set;
	}

	public virtual GlTexture GlTexture
	{
		get;
		set;
	}

	public virtual GlColor GlColor
	{
		get;
		set;
	}

	public abstract void moveTo(float x, float y);

	public abstract void Rotate(float angle);

	public abstract void Rotate(float SIN, float COS);

	public abstract GlFigure getScaled(float scale);

	public virtual IEnumerable<GlPointR2> getIntersection(GlPointR2 P)
	{
		throw new System.NotImplementedException();
	}

	public abstract IEnumerable<GlPointR2> getIntersection(GlLineR2 L);

	public abstract IEnumerable<GlPointR2> getIntersection(GlCurve C);

	public abstract IEnumerable<GlPointR2> getIntersection(GlPolygon POLY);

	public virtual IEnumerable<GlPointR2> getIntersection(GlFigureSystem FS)
	{
		throw new System.NotImplementedException();
	}

	public virtual IEnumerable<GlPointR2> getIntersection(GlFigure F)
	{
		throw new System.NotImplementedException();
	}

	public abstract bool isPointBelongs(GlPointR2 P);

	public abstract void Draw();

	public abstract void DrawFill();

	public abstract void Draw(GlTexture T);

	public abstract void Draw(GlRectangle Border);

	public abstract void DrawFill(GlRectangle Border);

	public virtual void Draw(GlColor drawColor)
	{
		throw new System.NotImplementedException();
	}

	public virtual void Draw(float lineWidth)
	{
		throw new System.NotImplementedException();
	}

	public virtual void Draw(GlColor drawColor, float lineWidth)
	{
		throw new System.NotImplementedException();
	}

	public virtual void DrawFill(GlColor drawColor)
	{
		throw new System.NotImplementedException();
	}

	public virtual void Draw(GlRectangle Border, GlColor drawColor)
	{
		throw new System.NotImplementedException();
	}

	public virtual void Draw(GlRectangle Border, float lineWidth)
	{
		throw new System.NotImplementedException();
	}

	public virtual void Draw(GlRectangle Border, GlColor drawColor, float lineWidth)
	{
		throw new System.NotImplementedException();
	}

	public virtual void DrawFill(GlRectangle Border, GlColor drawColor)
	{
		throw new System.NotImplementedException();
	}

	public virtual GlColor getCurrentColor()
	{
		throw new System.NotImplementedException();
	}

	public virtual float getCurrentGlWidth()
	{
		throw new System.NotImplementedException();
	}

	public virtual GlFigure getCopy()
	{
		throw new System.NotImplementedException();
	}

}

